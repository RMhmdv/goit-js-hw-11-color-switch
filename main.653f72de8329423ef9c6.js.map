{"version":3,"sources":["webpack:///./index.js"],"names":["colors","refs","startBtnEl","document","querySelector","stopBtnEl","classList","add","ColorSwitcher","startBtn","this","intervalId","isActive","start","setInterval","body","style","backgroundColor","randomIntegerFromInterval","length","stop","clearInterval","min","max","Math","floor","random","myColorSwitcher","addEventListener","bind"],"mappings":"kHAAA,qBAEMA,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,WAGIC,EAAO,CACTC,WAAYC,SAASC,cAAc,+BACnCC,UAAWF,SAASC,cAAc,+BAGtCH,EAAKC,WAAWI,UAAUC,IAAI,MAAO,aACrCN,EAAKI,UAAUC,UAAUC,IAAI,O,IAEvBC,E,WACF,cAA0B,IAAZC,EAAY,EAAZA,SACVC,KAAKC,WAAa,KAClBD,KAAKE,UAAW,EAChBF,KAAKD,SAAWA,E,2BAGpBI,MAAA,WACQH,KAAKE,WAITF,KAAKE,UAAW,EAEhBF,KAAKC,WAAaG,aAAY,WAC1BX,SAASY,KAAKC,MAAMC,gBAAkBjB,EAAOkB,EAA0B,EAAGlB,EAAOmB,OAAS,MAC3F,O,EAIPC,KAAA,WACIC,cAAcX,KAAKC,YACnBD,KAAKE,UAAW,G,KAGlBM,EAA4B,SAACI,EAAKC,GACpC,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAGlDK,EAAkB,IAAInB,EAAc,CACtCC,SAAUR,EAAKC,aAGnBD,EAAKC,WAAW0B,iBAAiB,QAASD,EAAgBd,MAAMgB,KAAKF,IACrE1B,EAAKI,UAAUuB,iBAAiB,QAASD,EAAgBP,KAAKS,KAAKF,M","file":"main.653f72de8329423ef9c6.js","sourcesContent":["import './styles.css';\n\nconst colors = [\n  '#FFFFFF',\n  '#2196F3',\n  '#4CAF50',\n  '#FF9800',\n  '#009688',\n  '#795548',\n];\n\nconst refs = {\n    startBtnEl: document.querySelector('button[data-action=\"start\"]'),\n    stopBtnEl: document.querySelector('button[data-action=\"stop\"]'),\n}\n\nrefs.startBtnEl.classList.add('btn', 'is-active');\nrefs.stopBtnEl.classList.add('btn');\n\nclass ColorSwitcher{\n    constructor({ startBtn }) {\n        this.intervalId = null;\n        this.isActive = false;\n        this.startBtn = startBtn;\n    }\n\n    start() {\n        if (this.isActive) {\n            return;            \n        }\n\n        this.isActive = true;\n\n        this.intervalId = setInterval(() => {\n            document.body.style.backgroundColor = colors[randomIntegerFromInterval(0, colors.length - 1)];\n        }, 1000);\n        \n    }\n\n    stop() {\n        clearInterval(this.intervalId);\n        this.isActive = false;\n    }\n}\nconst randomIntegerFromInterval = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst myColorSwitcher = new ColorSwitcher({\n    startBtn: refs.startBtnEl,\n});\n\nrefs.startBtnEl.addEventListener('click', myColorSwitcher.start.bind(myColorSwitcher));\nrefs.stopBtnEl.addEventListener('click', myColorSwitcher.stop.bind(myColorSwitcher))"],"sourceRoot":""}